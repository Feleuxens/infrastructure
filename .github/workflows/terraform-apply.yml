name: "Terraform Apply"

on:
  workflow_dispatch:
    inputs:
      environment:
        required: true
        type: choice
        default: production
        options:
          - production
  workflow_call:
    inputs:
      environment:
        required: true
        type: string

jobs:
  terraform-apply:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    permissions:
      contents: read
    env:
      TF_HTTP_PASSWORD: ${{ secrets.TF_HTTP_PASSWORD }}
      TF_VAR_CLUSTER_HOST: ${{ secrets.TF_VAR_CLUSTER_HOST }}
      TF_VAR_CLUSTER_CLIENT_CERT: ${{ secrets.TF_VAR_CLUSTER_CLIENT_CERT }}
      TF_VAR_CLUSTER_CLIENT_KEY: ${{ secrets.TF_VAR_CLUSTER_CLIENT_KEY }}
      TF_VAR_CLUSTER_CA_CERT: ${{ secrets.TF_VAR_CLUSTER_CA_CERT }}
      TF_VAR_DOMAIN_CF_ACCOUNT: ${{ secrets.TF_VAR_DOMAIN_CF_ACCOUNT }}
      TF_VAR_DOMAIN_CF_KEY: ${{ secrets.TF_VAR_DOMAIN_CF_KEY }}
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -recursive
        working-directory: "environments/${{ inputs.environment }}"
      
      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: "environments/${{ inputs.environment }}"
      
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        working-directory: "environments/${{ inputs.environment }}"
      
      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve
        working-directory: "environments/${{ inputs.environment }}"